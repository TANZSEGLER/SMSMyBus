<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Stop __UP_stopID__"/>
  <UserPref name="stopID" display_name="Stop #" default_value="1878"/>

  <Content type="html">
  
  <![CDATA[
      <link rel="stylesheet" href="http://www.smsmybus.com/gadgets/style.css">
  
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script> 
    <script type="text/javascript" src="http://www.smsmybus.com/js/jquery.timers-1.2.js"></script>
    <script type="text/javascript">
      function refreshTimes(stopID, Direction) {
          var ts = new Date().getTime();
          params = {};
          params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
    	  gadgets.io.makeRequest("http://www.smsmybus.com/api/v1/getarrivals?key=googlegadget&stopID="+stopID+"&nocache="+ts,response,params);
      } // refreshTimes
      
    </script>

    <script type="text/javascript">
      $(document).ready(function() {
          updateClock();
          refreshTimes('1878', '<< Westbound');

          $(this).everyTime("61s",function() {
            //Note: this is now stupid, make the document.ready call a named function
            updateClock();
            refreshTimes('1878', '<< Westbound');
	       });
      });

    </script>
    
    <script type="text/javascript">

      function response(obj) {
          var jsondata = obj.data;
          if( jsondata.status == "-1" ) {
              $("#1878-estimates").replaceWith('<p id="1878-estimates" style="color:red;font-weight: bold">Error retrieving stop arrival data!</p>');
          } else {
              document.getElementById("clock").firstChild.nodeValue = jsondata.timestamp;
              $("#1878-estimates").replaceWith('<div id="1878-estimates" class="estimates"><div class="subhead">Few on Ingersoll '+jsondata.timestamp+' estimate</div>');

              var routes = jsondata.stop.route;
              for( var i=0; i < routes.length; i++ ) {
                  var routeID = routes[i].routeID;
                  var minutes = routes[i].minutes;
                  var destination = routes[i].destination

      	           if (i>4) {
      	               $("#1878-estimates").append('<span class="arrival"> ... #'+routeID+' in '+minutes+' min </span>'); 
      	               return true;
      	           } //limit number of rows
          	       destination = destination.substring(0,12); //limit the length in case of long ones (unknown risk)
                   if (minutes<6) {
                       time = '<div class="arrival"><span class="coming-soon">#<span class="route-label">'+routeID+'</span> to <span class="destination-abbrev">'+destination+'</span> in <span class="minutes">'+minutes+'</span> min</span></div><div class="destination-text">'+destination+'</span></div>';
                   } else {
                       time = '<div class="arrival">#<span class="route-label">'+routeID+'</span> to <span class="destination-abbrev">'+destination+'</span> in <span class="minutes">'+minutes+'</span> min</span></div><div class="destination-text">'+destination+'</div>';
                   }
      	          $("#1878-estimates").append(time);        	          
              }
          }   
       } // success function

	function updateClock ( )
	{
	  var currentTime = new Date ( );
	
	  var currentHours = currentTime.getHours ( );
	  var currentMinutes = currentTime.getMinutes ( );
	  var currentSeconds = currentTime.getSeconds ( );
	
	  // Pad the minutes and seconds with leading zeros, if required
	  currentMinutes = ( currentMinutes < 10 ? "0" : "" ) + currentMinutes;
	  currentSeconds = ( currentSeconds < 10 ? "0" : "" ) + currentSeconds;
	
	  // Choose either "AM" or "PM" as appropriate
	  var timeOfDay = ( currentHours < 12 ) ? "am" : "pm";
	
	  // Convert the hours component to 12-hour format if needed
	  currentHours = ( currentHours > 12 ) ? currentHours - 12 : currentHours;
	
	  // Convert an hours component of "0" to "12"
	  currentHours = ( currentHours == 0 ) ? 12 : currentHours;
	
	  // Compose the string for display
	  var currentTimeString = currentHours + ":" + currentMinutes + " " + timeOfDay;
	
	  // Update the time display
	  document.getElementById("clock").firstChild.nodeValue = currentTimeString;
	}
	
	</script>
    	<div id="clock">clock</div>
        <div class="estimates" id="1878-estimates">new alert</div>
    ]]>
    
  </Content>

</Module>
